!#######################################################################
!Module compiling GG parameters
!#######################################################################
module gg_parameters

   !====================================================================
   !Declaration of variables
   !====================================================================
   use precision_parameters, only: dp
   implicit none
   character(80) :: which_gg_model                                      !Name of the GG model
   character(80) :: gg_print_file                                       !Name of the file into which the GG properties are written
                                                                        !  (if gg_print_properties = .true.)
   character(80) :: which_kp_data                                       !In the gray gas absorption coefficient is to be determined
                                                                        !  by interpolating from pre-generated data, defines which
                                                                        !  data to use
   integer :: kp_data_size                                              !Size of the pre-generated data for the absorption coefficient
                                                                        !  (used internally, not to be speficied by the user)
   real(dp),allocatable,dimension(:) :: co_kp_data,co2_kp_data,&        !Arrays that store the pre-generated data for the absorption
      h2o_kp_data,soot_kp_data                                          !  coefficient of each species (used internally)
   real(dp),allocatable,dimension(:) :: tmp_kp_data                     !Array storing the discrete temperature values for which
                                                                        !  pre-generated data for the absorption coefficient is
                                                                        !  available (used internally)
   logical :: gg_print_properties                                       !If .true., print the properties the gas into file; the name
                                                                        !  of the file is gg_print_file
   
contains   
   !=======================================================
   !Subroutine with the default parameters of the GG model
   !=======================================================
   !(this does not need to be included in the main 
   !code if the user knows what they are doing)
   subroutine set_default_gg_parameters
   
      gg_print_properties = .false.
      gg_print_file = 'null'
      which_kp_data = 'fraga'
      
   endsubroutine set_default_gg_parameters

   !====================================================================
   !Subroutine to initialize the CO2, H2O and soot
   !Planck-mean absorption coefficient data
   !====================================================================
   subroutine intialize_kp_data
      
      !-----------------------------------------------------------------
      !Declaration of variables
      !-----------------------------------------------------------------
      use comp_functions, only: shutdown
      implicit none
      integer :: ii
      
      !-----------------------------------------------------------------
      !Deallocate arrays if allocated
      !-----------------------------------------------------------------
      if (allocated(tmp_kp_data))  deallocate(tmp_kp_data)
      if (allocated(h2o_kp_data))  deallocate(h2o_kp_data)
      if (allocated(co2_kp_data))  deallocate(co2_kp_data)
      if (allocated(co_kp_data))   deallocate(co_kp_data)
      if (allocated(soot_kp_data)) deallocate(soot_kp_data)
      
      !-----------------------------------------------------------------
      !Declare the parameters of each database
      !-----------------------------------------------------------------
      selectcase(trim(which_kp_data))
      case('fraga')
         !Size of tha data
         kp_data_size = 211

         !Allocate arrays
         allocate(tmp_kp_data(1:kp_data_size))
         allocate(h2o_kp_data(1:kp_data_size))
         allocate(co2_kp_data(1:kp_data_size))
         allocate(co_kp_data(1:kp_data_size))
         allocate(soot_kp_data(1:kp_data_size))
      
         !Populate the arrays
         do ii=1,kp_data_size
            tmp_kp_data(ii) = 400._dp + 2100._dp*&
                              real(ii-1,dp)/real(kp_data_size-1,dp)
         enddo
      
         !Soot data
         soot_kp_data(1:kp_data_size) = (/ &
            455714.571415139_dp, 472260.790588811_dp, 488777.625628938_dp, &
            505260.89498367_dp , 521706.713843633_dp, 538111.476016673_dp, &
            554471.837722479_dp, 570784.702896714_dp, 587047.209703929_dp, &
            603256.718031464_dp, 619410.797796857_dp, 635507.21794523_dp , &
            651543.936042627_dp, 667519.088396819_dp, 683430.980653278_dp, &
            699278.078827014_dp, 715059.000739836_dp, 730772.507838681_dp, &
            746417.497376471_dp, 761992.994938922_dp, 777498.147303707_dp, &
            792932.215619451_dp, 808294.568893722_dp, 823584.677779221_dp, &
            838802.108647738_dp, 853946.517942624_dp, 869017.646799766_dp, &
            884015.3159273_dp  , 898939.420735128_dp, 913789.926704618_dp, &
            928566.864988983_dp, 943270.32823581_dp , 957900.466622453_dp, &
            972457.484094879_dp, 986941.634802714_dp, 1001353.21972015_dp, &
            1015692.58344624_dp, 1029960.11117513_dp, 1044156.22582929_dp, &
            1058281.38534753_dp, 1072336.08012194_dp, 1086320.83057289_dp, &
            1100236.18486086_dp, 1114082.71672371_dp, 1127861.02343566_dp, &
            1141571.72388082_dp, 1155215.45673656_dp, 1168792.87875947_dp, &
            1182304.66316987_dp, 1195751.4981305_dp , 1209134.08531227_dp, &
            1222453.13854394_dp, 1235709.38254202_dp, 1248903.55171475_dp, &
            1262036.38903918_dp, 1275108.64500207_dp, 1288121.07660769_dp, &
            1301074.446445_dp  , 1313969.52181136_dp, 1326807.07389163_dp, &
            1339587.87698594_dp, 1352312.70778822_dp, 1364982.34470894_dp, &
            1377597.56724138_dp, 1390159.15536821_dp, 1402667.88900742_dp, &
            1415124.547494_dp  , 1427529.90909613_dp, 1439884.75056322_dp, &
            1452189.84670582_dp, 1464445.97000371_dp, 1476653.89024033_dp, &
            1488814.37416502_dp, 1500928.18517769_dp, 1512996.08303732_dp, &
            1525018.82359156_dp, 1536997.15852715_dp, 1548931.83513917_dp, &
            1560823.5961182_dp , 1572673.17935479_dp, 1584481.31776004_dp, &
            1596248.73910075_dp, 1607976.16584893_dp, 1619664.3150446_dp , &
            1631313.89817157_dp, 1642925.62104387_dp, 1654500.18370418_dp, &
            1666038.2803322_dp , 1677540.59916227_dp, 1689007.82241089_dp, &
            1700440.62621215_dp, 1711839.68056083_dp, 1723205.64926325_dp, &
            1734539.18989488_dp, 1745840.95376432_dp, 1757111.585883_dp  , &
            1768351.7249407_dp , 1779562.00328578_dp, 1790743.04691034_dp, &
            1801895.47543925_dp, 1813019.90212428_dp, 1824116.93383979_dp, &
            1835187.17108392_dp, 1846231.20798125_dp, 1857249.63228867_dp, &
            1868243.02540377_dp, 1879211.96237503_dp, 1890157.01191434_dp, &
            1901078.73641056_dp, 1911977.69194522_dp, 1922854.42830914_dp, &
            1933709.48901963_dp, 1944543.41133919_dp, 1955356.72629451_dp, &
            1966149.95869628_dp, 1976923.62715861_dp, 1987678.24411904_dp, &
            1998414.31585916_dp, 2009132.34252365_dp, 2019832.81814096_dp, &
            2030516.23064158_dp, 2041183.06187775_dp, 2051833.78764122_dp, &
            2062468.87768096_dp, 2073088.79572051_dp, 2083693.9994733_dp , &
            2094284.94065844_dp, 2104862.06501481_dp, 2115425.81231409_dp, &
            2125976.61637323_dp, 2136514.90506507_dp, 2147041.1003291_dp , &
            2157555.61817913_dp, 2168058.86871179_dp, 2178551.25611275_dp, &
            2189033.17866158_dp, 2199505.0287355_dp , 2209967.19281319_dp, &
            2220420.05147461_dp, 2230863.97940254_dp, 2241299.34538159_dp, &
            2251726.51229513_dp, 2262145.83712279_dp, 2272557.67093587_dp, &
            2282962.3588916_dp , 2293360.24022672_dp, 2303751.64824968_dp, &
            2314136.91033168_dp, 2324516.3478977_dp , 2334890.27641541_dp, &
            2345259.00538388_dp, 2355622.83832139_dp, 2365982.07275269_dp, &
            2376337.0001947_dp , 2386687.90614278_dp, 2397035.07005584_dp, &
            2407378.76534031_dp, 2417719.25933473_dp, 2428056.81329375_dp, &
            2438391.6823707_dp , 2448724.11560163_dp, 2459054.35588748_dp, &
            2469382.63997738_dp, 2479709.19845169_dp, 2490034.25570385_dp, &
            2500358.02992425_dp, 2510680.73308236_dp, 2521002.570911_dp  , &
            2531323.74288859_dp, 2541644.44222405_dp, 2551964.85584076_dp, &
            2562285.16436099_dp, 2572605.54209202_dp, 2582926.15701101_dp, &
            2593247.17075238_dp, 2603568.73859482_dp, 2613891.00944983_dp, &
            2624214.12585047_dp, 2634538.22394073_dp, 2644863.43346734_dp, &
            2655189.87777129_dp, 2665517.6737804_dp , 2675846.93200437_dp, &
            2686177.75652876_dp, 2696510.24501295_dp, 2706844.48868621_dp, &
            2717180.5723484_dp , 2727518.57437001_dp, 2737858.56669268_dp, &
            2748200.61483352_dp, 2758544.77789017_dp, 2768891.10854596_dp, &
            2779239.6530779_dp , 2789590.45136613_dp, 2799943.53690453_dp, &
            2810298.93681278_dp, 2820656.67185102_dp, 2831016.75643489_dp, &
            2841379.19865268_dp, 2851744.00028457_dp, 2862111.1568233_dp , &
            2872480.65749575_dp, 2882852.48528754_dp, 2893226.61696854_dp, &
            2903603.02311982_dp, 2913981.66816275_dp, 2924362.51039007_dp, &
            2934745.50199822_dp, 2945130.58912049_dp, 2955517.71186424_dp, &
            2965906.80434741_dp /)
         
         !CO2 data 
         co2_kp_data(1:kp_data_size) = (/ &
            25.8369078624249_dp, 26.2234094426199_dp, 26.6392138723014_dp, &
            27.0743603334129_dp, 27.5197013104934_dp, 27.9669613890544_dp, &
            28.4087635635936_dp, 28.8386295389481_dp, 29.2509597382509_dp, &
            29.6409979636777_dp, 30.0047849205643_dp, 30.3685269546825_dp, &
            30.7013063610569_dp, 31.0010541045738_dp, 31.2662650467461_dp, &
            31.4959389812652_dp, 31.689523349343_dp , 31.8468584619447_dp, &
            31.9681258098843_dp, 32.053799841424_dp , 32.1046034248648_dp, &
            32.2744124342414_dp, 32.41360462482_dp  , 32.5227975305336_dp, &
            32.6027498804212_dp, 32.6543367457739_dp, 32.6785272067607_dp, &
            32.6763644052893_dp, 32.6489478365503_dp, 32.5974177234953_dp, &
            32.5229413153145_dp, 32.1618945057538_dp, 31.781860587782_dp , &
            31.3846705321769_dp, 30.9720837623879_dp, 30.5457843636966_dp, &
            30.1073785035496_dp, 29.6583928939259_dp, 29.2002741434928_dp, &
            28.7343888632375_dp, 28.2620244041903_dp, 28.0087658905692_dp, &
            27.747096844249_dp , 27.4778295329701_dp, 27.2017388617688_dp, &
            26.9195624066602_dp, 26.6320007009327_dp, 26.3397177330424_dp, &
            26.0433416198871_dp, 25.7434654235529_dp, 25.4406480835444_dp, &
            25.1695047105025_dp, 24.8954915079909_dp, 24.6190662224231_dp, &
            24.3406598234222_dp, 24.060677444732_dp , 23.7794993503033_dp, &
            23.4974819153897_dp, 23.2149586139545_dp, 22.9322410049984_dp, &
            22.6496197115884_dp, 22.3159795201508_dp, 21.9845374690737_dp, &
            21.6555125926417_dp, 21.3291042861472_dp, 21.0054934687021_dp, &
            20.6848436972967_dp, 20.3673022320707_dp, 20.0530010531536_dp, &
            19.7420578296749_dp, 19.4345768418211_dp, 19.0397901033388_dp, &
            18.6515951821251_dp, 18.2700062860876_dp, 17.8950261025809_dp, &
            17.5266467669889_dp, 17.1648507696109_dp, 16.8096118039765_dp, &
            16.4608955595944_dp, 16.1186604620787_dp, 15.7828583635136_dp, &
            15.5377372789207_dp, 15.2961351581974_dp, 15.0580516402891_dp, &
            14.8234820224925_dp, 14.5924176079369_dp, 14.3648460317135_dp, &
            14.1407515667733_dp, 13.9201154106337_dp, 13.7029159539264_dp, &
            13.4891290317576_dp, 13.2643118717977_dp, 13.043301598011_dp , &
            12.8260575629422_dp, 12.6125374919657_dp, 12.4026976746944_dp, &
            12.1964931428938_dp, 11.9938778357079_dp, 11.7948047529704_dp, &
            11.5992260973356_dp, 11.4070934059181_dp, 11.2221710632123_dp, &
            11.0404982858367_dp, 10.8620269036408_dp, 10.6867085275117_dp, & 
            10.5144946344008_dp, 10.3453366455253_dp, 10.17918599818_dp  , &
            10.0159942115834_dp, 9.85571294715035_dp, 9.69829406356209_dp, &
            9.52174849985058_dp, 9.34868781666082_dp, 9.17904527948614_dp, &
            9.01275496405042_dp, 8.84975178676643_dp, 8.68997153121826_dp, &
            8.53335087096622_dp, 8.37982738895953_dp, 8.22933959382054_dp, &
            8.08182693324232_dp, 7.95287307695812_dp, 7.82625539475852_dp, &
            7.70193100727607_dp, 7.57985762119787_dp, 7.45999353862118_dp, &
            7.34229766477498_dp, 7.22672951423695_dp, 7.11324921575944_dp, &
            7.00181751581597_dp, 6.8923957809672_dp , 6.77976325312823_dp, &
            6.66924525214883_dp, 6.56079952884358_dp, 6.45438461544607_dp, &
            6.34995981893545_dp, 6.24748521375728_dp, 6.1469216340062_dp, &
            6.04823066512447_dp, 5.95137463517367_dp, 5.85631660573013_dp, &
            5.76828732044724_dp, 5.6818144847439_dp , 5.59686814869976_dp, &
            5.51341892079968_dp, 5.43143796121758_dp, 5.35089697487222_dp, &
            5.2717682042943_dp , 5.19402442232116_dp, 5.11763892465332_dp, &
            5.04258552229049_dp, 4.94979515900141_dp, 4.85885754516664_dp, &
            4.76973275684845_dp, 4.68238175521307_dp, 4.59676636851716_dp, &
            4.51284927428616_dp, 4.43059398170489_dp, 4.34996481422682_dp, &
            4.27092689241135_dp, 4.19344611700178_dp, 4.13570028083406_dp, &
            4.0789150356385_dp , 4.02307234029706_dp, 3.96815450967074_dp, &
            3.91414420813662_dp, 3.8610244431888_dp , 3.80877855909269_dp, &
            3.75739023060649_dp, 3.7068434567699_dp , 3.6571225547647_dp, &
            3.60332157345943_dp, 3.55045569242506_dp, 3.49850656054966_dp, &
            3.44745621402007_dp, 3.39728706814247_dp, 3.34798190930713_dp, &
            3.29952388709793_dp, 3.25189650654468_dp, 3.20508362051973_dp, &
            3.15906942227571_dp, 3.11260661623321_dp, 3.06694452757221_dp, &
            3.02206754061342_dp, 2.97796037107768_dp, 2.93460805882219_dp, &
            2.89199596072542_dp, 2.85010974371761_dp, 2.80893537795556_dp, &
            2.76845913014229_dp, 2.72866755698465_dp, 2.6877865032159_dp, &
            2.64761108008875_dp, 2.60812753921634_dp, 2.56932242553865_dp, &
            2.53118257073277_dp, 2.49369508677192_dp, 2.4568473596263_dp, &
            2.42062704310468_dp, 2.38502205283359_dp, 2.3500205603727_dp, &
            2.31530100030729_dp, 2.28116979109374_dp, 2.2476156591655_dp, &
            2.21462756896316_dp, 2.18219471757349_dp, 2.15030652949247_dp, &
            2.11895265150786_dp, 2.08812294769997_dp, 2.0578074945563_dp, &
            2.0279965762009_dp /)
         
         !H2O data 
         h2o_kp_data(1:kp_data_size) = (/ &
            28.762088078698_dp  , 27.4286160969439_dp , 26.204250923165_dp  , &
            25.0753826836472_dp , 24.0304993752421_dp , 23.0598359599541_dp , &
            22.1550843571301_dp , 21.3091533931671_dp , 20.515969835875_dp  , &
            19.7703132880199_dp , 19.0676790353171_dp , 18.387809096177_dp  , &
            17.7459453371272_dp , 17.1388191983341_dp , 16.5635655130106_dp , &
            16.0176613850901_dp , 15.4988751055828_dp , 15.0052234143137_dp , &
            14.5349357032445_dp , 14.0864239966626_dp , 13.6582577413201_dp , &
            13.2447517195932_dp , 12.8499450462855_dp , 12.4726575662256_dp , &
            12.1118127677784_dp , 11.7664253410366_dp , 11.4355905662404_dp , &
            11.1184752380449_dp , 10.8143098800415_dp , 10.522382044539_dp  , &
            10.2420305264633_dp , 9.96977428789935_dp , 9.7081764206421_dp  , &
            9.45667756814717_dp , 9.21475548821226_dp , 8.98192184353597_dp , &
            8.75771936381341_dp , 8.54171932606687_dp , 8.33351930837913_dp , &
            8.13274117926872_dp , 7.93902929087064_dp , 7.75070409665102_dp , &
            7.56894006132264_dp , 7.39342647929159_dp , 7.22387071070785_dp , &
            7.05999693919934_dp , 6.90154503528722_dp , 6.74826951378366_dp , &
            6.59993857507695_dp , 6.4563332215798_dp  , 6.31724644177037_dp , &
            6.18155050441912_dp , 6.0500790718138_dp  , 5.92264980085637_dp , &
            5.79909020458782_dp , 5.67923703911113_dp , 5.56293573363026_dp , &
            5.45003986000382_dp , 5.34041063859172_dp , 5.23391647750687_dp , &
            5.13043254266291_dp , 5.0300353817354_dp  , 4.93241209709462_dp , &
            4.83745581202843_dp , 4.74506497598852_dp , 4.6551430539114_dp  , &
            4.56759823547944_dp , 4.48234316291846_dp , 4.39929467604562_dp , &
            4.31837357338117_dp , 4.23950438822955_dp , 4.16216935133275_dp , &
            4.08677859173485_dp , 4.0132645312084_dp  , 3.94156270193984_dp , &
            3.87161157358108_dp , 3.80335239102201_dp , 3.73672902215699_dp , &
            3.67168781499772_dp , 3.60817746351456_dp , 3.5461488816379_dp  , &
            3.48544364454551_dp , 3.42613537223156_dp , 3.36818055792592_dp , &
            3.31153750649323_dp , 3.25616624029011_dp , 3.20202841062228_dp , &
            3.14908721444192_dp , 3.09730731595219_dp , 3.04665477280513_dp , &
            2.99709696660219_dp , 2.94778423512435_dp , 2.89953771967571_dp , &
            2.85232700594059_dp , 2.80612283282114_dp , 2.76089703663262_dp , &
            2.71662249848545_dp , 2.67327309465315_dp , 2.63082364974127_dp , &
            2.5892498924794_dp  , 2.54852841397627_dp , 2.50876558063929_dp , &
            2.46980829703757_dp , 2.43163551796406_dp , 2.39422691754894_dp , &
            2.35756285755265_dp , 2.32162435735535_dp , 2.28639306553984_dp , &
            2.25185123297122_dp , 2.21798168728691_dp , 2.18476780870867_dp , &
            2.15250153765042_dp , 2.12085064725417_dp , 2.08980025545277_dp , &
            2.05933594245767_dp , 2.02944373224715_dp , 2.00011007497237_dp , &
            1.97132183022929_dp , 1.94306625114866_dp , 1.91533096925574_dp , &
            1.88810398005592_dp , 1.86127544278375_dp , 1.83493626517498_dp , &
            1.80907529399813_dp , 1.78368169569579_dp , 1.75874494471928_dp , & 
            1.7342548123954_dp  , 1.7102013562975_dp  , 1.68657491009267_dp , &
            1.66336607384103_dp , 1.64056570472174_dp , 1.61812787631235_dp , &
            1.5960824364483_dp  , 1.57442090086535_dp , 1.55313501191478_dp , &
            1.53221673098009_dp , 1.51165823121119_dp , 1.49145189056039_dp , &
            1.47159028510468_dp , 1.45206618264013_dp , 1.43287253653505_dp , &
            1.41392437948217_dp , 1.39529596006837_dp , 1.37698065199227_dp , &
            1.35897199624501_dp , 1.34126369591142_dp , 1.32384961117176_dp , &
            1.30672375449445_dp , 1.28988028601043_dp , 1.27331350906183_dp , & 
            1.25701786591572_dp , 1.24099819165167_dp , 1.22523835199807_dp , &
            1.2097332046487_dp  , 1.1944777297134_dp  , 1.1794670261917_dp  , &
            1.16469630857175_dp , 1.15016090354746_dp , 1.13585624685025_dp , &
            1.12177788018963_dp , 1.10792144829845_dp , 1.09419962114609_dp , &
            1.08069417852278_dp , 1.06740096180848_dp , 1.05431590800063_dp , &
            1.04143504708478_dp , 1.02875449949285_dp , 1.01627047364461_dp , &
            1.00397926357014_dp , 0.991877246608853_dp, 0.979960881183137_dp, &
            0.968251912191719_dp, 0.956720667597872_dp, 0.945363874922656_dp, &
            0.934178333154304_dp, 0.923160910906474_dp, 0.912308544632968_dp, &
            0.90161823689681_dp , 0.891087054691579_dp, 0.880712127813534_dp, &
            0.870490647282027_dp, 0.860374391955752_dp, 0.850407541768888_dp, &
            0.840587420354136_dp, 0.830911408076931_dp, 0.821376940625584_dp, &
            0.811981507642216_dp, 0.802722651394051_dp, 0.793597965482401_dp, &
            0.78460509358946_dp , 0.775741728260462_dp, 0.766985544150039_dp, &
            0.758354915060516_dp, 0.749847659467292_dp, 0.741461640578287_dp, &
            0.733194765264587_dp, 0.725044983021153_dp, 0.717010284956101_dp, &
            0.709088702807873_dp, 0.701278307989532_dp, 0.693577210658928_dp, &
            0.685974682936682_dp, 0.678477978195281_dp, 0.67108531308321_dp , &
            0.663794939640895_dp, 0.656605144485737_dp, 0.649514248018547_dp, &
            0.642520603651494_dp, 0.63562259705591_dp , 0.628818645430209_dp, &
            0.622107196786809_dp /)
   
         !CO data (unavaliable)
         co_kp_data = 0._dp
   
      case('zhao')
         !Size of tha data
         kp_data_size = 126

         !Allocate arrays
         allocate(tmp_kp_data(1:kp_data_size))
         allocate(h2o_kp_data(1:kp_data_size))
         allocate(co2_kp_data(1:kp_data_size))
         allocate(co_kp_data(1:kp_data_size))
         allocate(soot_kp_data(1:kp_data_size))
      
         !Populate the arrays
         do ii=1,kp_data_size
            tmp_kp_data(ii) = 300._dp + 2500._dp*&
                              real(ii-1,dp)/real(kp_data_size-1,dp)
         enddo  

         !CO2 data 
         co2_kp_data(1:kp_data_size) = (/ &
            25.941_dp, 25.071_dp, 24.680_dp, 24.726_dp, &
            25.135_dp, 25.819_dp, 26.692_dp, 27.670_dp, &
            28.682_dp, 29.672_dp, 30.594_dp, 31.415_dp, &
            32.114_dp, 32.678_dp, 33.101_dp, 33.383_dp, &
            33.528_dp, 33.545_dp, 33.442_dp, 33.231_dp, &
            32.922_dp, 32.527_dp, 32.057_dp, 31.523_dp, &
            30.935_dp, 30.303_dp, 29.634_dp, 28.938_dp, &
            28.220_dp, 27.487_dp, 26.745_dp, 25.997_dp, &
            25.250_dp, 24.505_dp, 23.766_dp, 23.035_dp, &
            22.315_dp, 21.608_dp, 20.915_dp, 20.237_dp, &
            19.575_dp, 18.930_dp, 18.302_dp, 17.692_dp, &
            17.099_dp, 16.525_dp, 15.968_dp, 15.429_dp, &
            14.907_dp, 14.403_dp, 13.916_dp, 13.445_dp, &
            12.991_dp, 12.552_dp, 12.129_dp, 11.721_dp, &
            11.327_dp, 10.948_dp, 10.582_dp, 10.229_dp, &
            9.8891_dp, 9.5614_dp, 9.2457_dp, 8.9414_dp, &
            8.6481_dp, 8.3654_dp, 8.0930_dp, 7.8304_dp, &
            7.5773_dp, 7.3333_dp, 7.0981_dp, 6.8713_dp, &
            6.6526_dp, 6.4417_dp, 6.2383_dp, 6.0420_dp, &
            5.8527_dp, 5.6700_dp, 5.4937_dp, 5.3236_dp, &
            5.1593_dp, 5.0007_dp, 4.8476_dp, 4.6997_dp, &
            4.5568_dp, 4.4188_dp, 4.2855_dp, 4.1566_dp, &
            4.0320_dp, 3.9116_dp, 3.7951_dp, 3.6825_dp, &
            3.5736_dp, 3.4683_dp, 3.3664_dp, 3.2678_dp, &
            3.1724_dp, 3.0800_dp, 2.9906_dp, 2.9040_dp, &
            2.8202_dp, 2.7391_dp, 2.6604_dp, 2.5843_dp, &
            2.5105_dp, 2.4390_dp, 2.3697_dp, 2.3026_dp, &
            2.2375_dp, 2.1744_dp, 2.1133_dp, 2.0540_dp, &
            1.9965_dp, 1.9407_dp, 1.8866_dp, 1.8342_dp, &
            1.7833_dp, 1.7339_dp, 1.6860_dp, 1.6395_dp, &
            1.5944_dp, 1.5506_dp, 1.5081_dp, 1.4668_dp, &
            1.4268_dp, 1.3879_dp /)
            
         !H2O data 
         h2o_kp_data(1:kp_data_size) = (/ &
            37.1160_dp, 33.5600_dp, 30.5930_dp, 28.0800_dp, &
            25.9190_dp, 24.0350_dp, 22.3690_dp, 20.8800_dp, &
            19.5360_dp, 18.3150_dp, 17.1980_dp, 16.1730_dp, &
            15.2290_dp, 14.3570_dp, 13.5510_dp, 12.8040_dp, &
            12.1120_dp, 11.4690_dp, 10.8710_dp, 10.3160_dp, &
            9.79900_dp, 9.31740_dp, 8.86830_dp, 8.44910_dp, &
            8.05730_dp, 7.69090_dp, 7.34770_dp, 7.02600_dp, &
            6.72390_dp, 6.44010_dp, 6.17300_dp, 5.92140_dp, &
            5.68420_dp, 5.46020_dp, 5.24840_dp, 5.04800_dp, &
            4.85820_dp, 4.67820_dp, 4.50730_dp, 4.34490_dp, &
            4.19050_dp, 4.04350_dp, 3.90340_dp, 3.76990_dp, &
            3.64240_dp, 3.52070_dp, 3.40440_dp, 3.29310_dp, &
            3.18660_dp, 3.08470_dp, 2.98700_dp, 2.89330_dp, &
            2.80340_dp, 2.71720_dp, 2.63440_dp, 2.55480_dp, &
            2.47830_dp, 2.40480_dp, 2.33400_dp, 2.26590_dp, &
            2.20040_dp, 2.13720_dp, 2.07640_dp, 2.01780_dp, &
            1.96120_dp, 1.90670_dp, 1.85410_dp, 1.80330_dp, &
            1.75430_dp, 1.70690_dp, 1.66120_dp, 1.61700_dp, &
            1.57430_dp, 1.53300_dp, 1.49310_dp, 1.45450_dp, &
            1.41710_dp, 1.38090_dp, 1.34600_dp, 1.31210_dp, &
            1.27930_dp, 1.24750_dp, 1.21670_dp, 1.18680_dp, &
            1.15790_dp, 1.12990_dp, 1.10270_dp, 1.07630_dp, &
            1.05080_dp, 1.02600_dp, 1.00190_dp, 0.97852_dp, &
            0.95583_dp, 0.93381_dp, 0.91242_dp, 0.89164_dp, &
            0.87146_dp, 0.85185_dp, 0.83280_dp, 0.81428_dp, &
            0.79627_dp, 0.77877_dp, 0.76174_dp, 0.74519_dp, &
            0.72908_dp, 0.71341_dp, 0.69816_dp, 0.68332_dp, &
            0.66888_dp, 0.65482_dp, 0.64113_dp, 0.62779_dp, &
            0.61481_dp, 0.60216_dp, 0.58983_dp, 0.57783_dp, &
            0.56612_dp, 0.55472_dp, 0.54360_dp, 0.53276_dp, &
            0.52219_dp, 0.51188_dp, 0.50183_dp, 0.49202_dp, &
            0.48245_dp, 0.47311_dp /)
         
         !CO data 
         co_kp_data(1:kp_data_size) = (/ &
            0.67294_dp, 0.92614_dp, 1.20530_dp, 1.49870_dp, &
            1.79480_dp, 2.08370_dp, 2.35670_dp, 2.60780_dp, &
            2.83240_dp, 3.02810_dp, 3.19370_dp, 3.32930_dp, &
            3.43590_dp, 3.51520_dp, 3.56920_dp, 3.60020_dp, &
            3.61070_dp, 3.60290_dp, 3.57940_dp, 3.54220_dp, &
            3.49350_dp, 3.43520_dp, 3.36890_dp, 3.29620_dp, &
            3.21850_dp, 3.13700_dp, 3.05270_dp, 2.96640_dp, &
            2.87910_dp, 2.79130_dp, 2.70370_dp, 2.61660_dp, &
            2.53050_dp, 2.44580_dp, 2.36260_dp, 2.28110_dp, &
            2.20170_dp, 2.12420_dp, 2.04900_dp, 1.97590_dp, &
            1.90510_dp, 1.83660_dp, 1.77040_dp, 1.70640_dp, &
            1.64470_dp, 1.58520_dp, 1.52780_dp, 1.47260_dp, &
            1.41940_dp, 1.36820_dp, 1.31900_dp, 1.27170_dp, &
            1.22620_dp, 1.18250_dp, 1.14050_dp, 1.10020_dp, &
            1.06140_dp, 1.02410_dp, 0.98835_dp, 0.95398_dp, &
            0.92096_dp, 0.88924_dp, 0.85877_dp, 0.82950_dp, &
            0.80137_dp, 0.77435_dp, 0.74838_dp, 0.72342_dp, &
            0.69943_dp, 0.67637_dp, 0.65420_dp, 0.63288_dp, &
            0.61238_dp, 0.59266_dp, 0.57369_dp, 0.55543_dp, &
            0.53787_dp, 0.52096_dp, 0.50468_dp, 0.48901_dp, &
            0.47392_dp, 0.45938_dp, 0.44538_dp, 0.43188_dp, &
            0.41888_dp, 0.40635_dp, 0.39426_dp, 0.38261_dp, &
            0.37137_dp, 0.36053_dp, 0.35007_dp, 0.33997_dp, &
            0.33023_dp, 0.32082_dp, 0.31174_dp, 0.30297_dp, &
            0.29449_dp, 0.28631_dp, 0.27840_dp, 0.27075_dp, &
            0.26336_dp, 0.25622_dp, 0.24931_dp, 0.24263_dp, &
            0.23616_dp, 0.22991_dp, 0.22385_dp, 0.21799_dp, &
            0.21232_dp, 0.20683_dp, 0.20151_dp, 0.19636_dp, &
            0.19136_dp, 0.18653_dp, 0.18184_dp, 0.17730_dp, &
            0.17289_dp, 0.16862_dp, 0.16448_dp, 0.16047_dp, &
            0.15657_dp, 0.15279_dp, 0.14912_dp, 0.14556_dp, &
            0.14210_dp, 0.13875_dp /)
         
         !Soot data (unavailable)
         soot_kp_data = 0._dp

      case default
         call shutdown('which_kp_data not specified')
      endselect
   endsubroutine intialize_kp_data

   !====================================================================
   !Function to get the interpolated Planck-mean absorption 
   !coefficient (per mole fraction) of a given species
   !====================================================================
   real(dp) function get_interpolated_kp(ttmp,species_spec)
      
      !-----------------------------------------------------------------
      !Declaration of variables
      !-----------------------------------------------------------------
      use comp_functions, only: shutdown
      implicit none
      character(*),intent(in) :: species_spec
      real(dp),intent(in) :: ttmp
      real(dp) :: x1,x2,y1,y2
      integer :: ii,i1,i2
      
      !-----------------------------------------------------------------
      !Find temperature bounds
      !-----------------------------------------------------------------
      if (ttmp.lt.tmp_kp_data(1)) &
         call shutdown('get_interpolated_kp: Temperature below the &
                       &allowed bounds in Kp interpolation')
      if (ttmp.gt.tmp_kp_data(kp_data_size)) &
         call shutdown('get_interpolated_kp: Temperature above the &
                       &allowed bounds in Kp interpolation')
      do ii=1,kp_data_size-1
         if ((ttmp.ge.tmp_kp_data(ii)).and.&
            (ttmp.le.tmp_kp_data(ii+1))) then
            x1 = tmp_kp_data(ii);   x2 = tmp_kp_data(ii+1)
            i1 = ii;                i2 = ii+1
            exit
         endif
      enddo
      
      !-----------------------------------------------------------------
      !Select y values
      !-----------------------------------------------------------------
      selectcase(trim(species_spec))
         case('h2o')
            y1 = h2o_kp_data(i1); y2 = h2o_kp_data(i2)
         case('co2')
            y1 = co2_kp_data(i1); y2 = co2_kp_data(i2)
         case('co')
            y1 = co_kp_data(i1); y2 = co_kp_data(i2)
         case('soot')
            y1 = soot_kp_data(i1); y2 = soot_kp_data(i2)
         case default
            call shutdown('Species not available for Kp interpolation')
      endselect
      
      !-----------------------------------------------------------------
      !Interpolate
      !-----------------------------------------------------------------
      get_interpolated_kp = y1 + (y2-y1)*(ttmp - x1)/(x2-x1)

   endfunction get_interpolated_kp
   
endmodule gg_parameters
